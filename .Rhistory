count.cache = counts,
n.clusters = 3)
plot(all_rf_pairwise, first.mrk = 40, second.mrk = 51)
mat <- rf_list_to_matrix(input.twopt = all_rf_pairwise, n.clusters = 3)
plot(mat)
map_given_ord<-est_rf_hmm_sequential(input.seq = all_snp,
thres.twopt = 5,
thres.hmm = 5,
extend.tail = 50,
twopt = all_rf_pairwise,
tol = 0.1,
tol.final = 10e-4,
verbose = TRUE,
rf.lim = .1,
phase.number.limit = 60,
info.tail = TRUE,
reestimate.single.ph.configuration = FALSE)
h1.given.P <- map_given_ord$maps[[1]]$seq.ph$P
h2.given.P <- ph.temp$hom.allele.p[names(h1.given.P)]
compare_haplotypes(m = 6,  h1.given.P, h2.given.P) ## Comparing phased haplotypes
h1.given.Q <- map_given_ord$maps[[1]]$seq.ph$Q
h2.given.Q <- ph.temp$hom.allele.q[names(h1.given.Q)]
compare_haplotypes(m = 6,  h1.given.Q, h2.given.Q) ## Comparing phased haplotypes
plot(map_given_ord)
mds_o<-mds_polymap(input.mat = mat)
plot(mds_o)
plot(mds_o$locimap$confplotno)
plot(mat, ord = mds_o$locimap$confplotno)
all_snp_mds<-make_seq_polymap(input.obj = mds_o)
all_snp_mds
system.time(
map_mds_ord<-est_rf_hmm_sequential(input.seq = all_snp_mds,
thres.twopt = 5,
thres.hmm = 5,
extend.tail = 50,
twopt = all_rf_pairwise,
tol = 0.1,
tol.final = 10e-4,
verbose = TRUE,
phase.number.limit = 60))
dat
all_snp
counts
all_rf_pairwise
plot(all_rf_pairwise, first.mrk = 40, second.mrk = 51)
mat
plot(mat)
load("/home/cristiane/Documents/polymap-master/data/hexafake.RData")
ph.temp
str(ph.temp)
sim_homologous
?sim_homologous
h1.given.P <- map_given_ord$maps[[1]]$seq.ph$P
h2.given.P <- ph.temp$hom.allele.p[names(h1.given.P)]
compare_haplotypes(m = 6,  h1.given.P, h2.given.P) ## Comparing phased haplotypes
h1.given.P
h2.given.P
?make_seq_polymap
map_given_ord$sub.maps
map_given_ord$maps
h1.given.P <- map_given_ord$maps[[1]]$seq.ph$P
h2.given.P <- ph.temp$hom.allele.p[names(h1.given.P)]
compare_haplotypes(m = 6,  h1.given.P, h2.given.P) ## Comparing phased haplotypes
?compare_haplotypes
?reest_map
?imf_h
map_mds_ord_ols <- reest_map(map_given_ord, mat, method = "ols")
plot(map_mds_ord_ols)
input.map <- map_given_ord
input.mat <- mat
method <- "ols"
if (!inherits(input.map, "polymap.map")) {
stop(deparse(substitute(input.map)), " is not an object of class 'polymap.map'")
}
method<-match.arg(method)
LOD.conf <- get_LOD(input.map, sorted = FALSE)
if(phase.config == "best") {
i.lpc <- which.min(LOD.conf)
} else if (phase.config > length(LOD.conf)) {
stop("invalid linkage phase configuration")
} else i.lpc <- phase.config
phase.config = "best"
verbose = TRUE
tol = 10e-3
weight = TRUE
LOD.conf <- get_LOD(input.map, sorted = FALSE)
if(phase.config == "best") {
i.lpc <- which.min(LOD.conf)
} else if (phase.config > length(LOD.conf)) {
stop("invalid linkage phase configuration")
} else i.lpc <- phase.config
LOD.conf
LOD.conf <- get_LOD(input.map, sorted = FALSE)
if(phase.config == "best") {
i.lpc <- which.min(LOD.conf)
} else if (phase.config > length(LOD.conf)) {
stop("invalid linkage phase configuration")
} else i.lpc <- phase.config
i.lpc
i.lpc
id<-as.character(input.map$maps[[i.lpc]]$seq.num)
id
y<-as.numeric((imf_h(as.dist(input.mat$rec.mat[id, id]))))
y
y<-as.numeric((imf_h(as.dist(input.mat$rec.mat[id, id]))))
w<-as.numeric((imf_h(as.dist(input.mat$lod.mat[id, id]))))
?combn
v<-t(combn(id,2))
w
i.lpc
z<-cumsum(imf_h(c(0,input.map$maps[[i.lpc]]$seq.rf)))
z
input.map$maps[[i.lpc]]$seq.rf
z
names(z)<-id
x<-numeric(nrow(v))
x
names(x)<-names(y)<-apply(v, 1, paste0, collapse="-")
x
for(i in 1:nrow(v))
x[i]<-z[v[i,2]]-z[v[i,1]]
x
model <- lm(y ~ x-1)
summary(model)
new <- data.frame(x = z)
u<-predict(model, new)
u
x
input.map$maps[[i.lpc]]$seq.rf
install.packages("prettydoc")
devtools::install_github("yixuan/prettydoc")
install.packages("plantbreeding")
install.packages("plantbreeding", repos="http://R-Forge.R-project.org")
install.packages("desplot")
design <- data.frame(set = rep(1:3, each=12),
rept = rep(rep(1:3, each=4),3),
parent= rep(rep(1:2, each=8),3),
F2 = c(rep(1:4,3), rep(4:8,3), rep(9:12,3)))
rep(1:3, each=12)
rep(rep(1:3, each=4),3)
rep(rep(1:2, each=8),3)
rep(rep(1:2, each=4),3)
c(rep(1:4,3), rep(4:8,3), rep(9:12,3))
c(rep(1:4,6), rep(4:8,6), rep(9:12,6))
c(rep(1:4,6), rep(5:8,6), rep(9:12,6))
rep(rep(1:2, each=4),6)
length(c(rep(1:4,6), rep(5:8,6), rep(9:12,6)))
c(rep(1:4,6), rep(5:8,6), rep(9:12,6))
length(rep(rep(1:2, each=4),6))
rep(rep(1:2, each=12),2)
rep(rep(1:2, each=12),3)
length(rep(rep(1:2, each=12),2))
length(rep(rep(1:2, each=12),3))
rep(rep(1:3, each=4),6)
length(rep(rep(1:3, each=4),6))
72/3
rep(1:3, each=24)
design <- data.frame(set = rep(1:3, each=24),
rept = rep(rep(1:3, each=4),6),
parent= rep(rep(1:2, each=12),3),
F2 = c(rep(1:4,6), rep(5:8,6), rep(9:12,6)))
design
library(desplot)
View(design)
install.packages("agridat")
library(agridat)
str(yates.oats)
rep(1:6,3)
rep(rep(1:6, each=4),3)
length(rep(rep(1:6, each=4),3))
col <- rep(rep(1:4, each=6),3)
col
row
row
rown <- rep(rep(1:6, each=4),3)
rown
col
cbind(rown,col)
deli <- cbind(rown,col)
sample(1:24, 24, replace = FALSE)
ord <- sample(1:24, 24, replace = FALSE)
deli.ord <- deli[ord,]
deli.ord
deli
ord
deli.ord
deli.ord <- data.frame()
deli.ord <- data.frame()
for(i in 1:3){
ord <- sample(1:24, 24, replace = FALSE)
deli.ord <- rbind(deli.ord,deli[ord,])
}
deli.ord
View(deli.ord)
deli
rep(rep(1:4, 4),6)
rep(rep(1:4, 4),3)
rep(rep(1:4, 6),3)
rown <- rep(rep(1:6, each=4),3)
col <- rep(rep(1:4, 6),3)
deli <- cbind(rown,col)
deli
deli.ord <- data.frame()
for(i in 1:3){
ord <- sample(1:24, 24, replace = FALSE)
deli.ord <- rbind(deli.ord,deli[ord,])
}
deli.ord
design <- cbind(design, deli.ord)
design
library(desplot)
desplot(set ~ col+row, design,
col=nitro, text=gen, cex=1, aspect=511/176,
out1=block, out2=gen,
out2.gpar=list(col = "gray50", lwd = 1, lty = 1))
desplot(set ~ col+row, design)
str(design)
str(yates.oats)
desplot(as.factor(set) ~ col+row, design)
design$set <- as.factor(design$set)
desplot(set ~ col+row, design)
desplot(set ~ col+rown, design)
yates.oats
rown <- rep(1:18, each=4)
col <- rep(rep(1:4, 6),3)
deli <- cbind(rown,col)
deli
ord <- sample(1:24, 24, replace = FALSE)
ord.1 <- sample(25:48, 24, replace = FALSE)
ord.2 <- sample(49:72, 24, replace = FALSE)
deli.ord <- deli[c(ord,ord.1,ord.2),]
deli.ord
design <- cbind(design, deli.ord)
desplot(set ~ col+rown, design)
design <- cbind(design, deli.ord)
desplot(set ~ col+rown, design)
deli.ord <- deli[c(ord,ord.1,ord.2),]
deli.ord <- deli[c(ord,ord.1,ord.2),]
design <- cbind(design, deli.ord)
desplot(set ~ col+rown, design)
design
design <- data.frame(set = rep(1:3, each=24),
rept = rep(rep(1:3, each=4),6),
parent= rep(rep(1:2, each=12),3),
F2 = c(rep(1:4,6), rep(5:8,6), rep(9:12,6)))
deli.ord <- deli[c(ord,ord.1,ord.2),]
design <- cbind(design, deli.ord)
desplot(set ~ col+rown, design)
desplot(set ~ col+rown, design,
col=F2, text=F2)
pdf()
desplot(set ~ col+rown, design,
col=F2, text=F2)
dev.off()
design$set <- as.factor(design$set)
desplot(set ~ col+rown, design,
col=F2, text=F2)
desplot(set ~ col+rown, design,
col=F2, text=F2)
desplot(set ~ col+rown, design,
col=rept, text=F2)
paste0("P", design$parent,".", design$F2)
prog <- paste0("P", design$parent,".", design$F2)
design <- cbind(design, deli.ord, prog)
desplot(set ~ col+rown, design,
col=rept, text=prog)
desplot(set ~ col+rown, design,
col=rept, text= as.factor(prog))
design$prog <- as.factor(design$prog)
desplot(set ~ col+rown, design,
col=rept, text= prog)
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set,
out2.gpar=list(col = "gray50", lwd = 1, lty = 1))
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set,
out2.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "")
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set,
out2.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no)
str(design)
str(yates.oats)
```
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set,
out2.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set,
out2.gpar=list(lwd = 1, lty = 1), main = "",shorten = 'no')
?desplot
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set,
out2.gpar=list(col = "blue", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set,
out1.gpar=list(col = "blue", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set,
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c("blue")
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c("blue","gray","green"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c(rgb(231,137,112), rgb(192,68,62), rgb(166,39,39)),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
?rgb
rgb(231,137,112)
rgb(192,68,62)
rgb(166,39,39, maxColorValue = 255)
rgb(192,68,62, maxColorValue = 255)
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c(rgb(231,137,112, maxColorValue = 255), rgb(192,68,62, maxColorValue = 255), rgb(166,39,39, maxColorValue = 255)),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
rgb(192,68,62, maxColorValue = 255)
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c(rgb(231,137,112, maxColorValue = 255), rgb(192,68,62, maxColorValue = 255), rgb(166,39,39, maxColorValue = 255)), col.text = c("#EDCCCA", "#F8DED8", "#D69C9C"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c(rgb(231,137,112, maxColorValue = 255), rgb(192,68,62, maxColorValue = 255), rgb(166,39,39, maxColorValue = 255)), col.text = c("white", "#d89000", "#D69C9C"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c(rgb(231,137,112, maxColorValue = 255), rgb(192,68,62, maxColorValue = 255), rgb(166,39,39, maxColorValue = 255)), col.text = c("white", "#a04c03", "#D69C9C"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c("#D1BDCF", "#C9EAD8", "#D0ECFB"), col.text = c("white", "#a04c03", "#D69C9C"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c("#D1BDCF", "#C9EAD8", "#D0ECFB"), col.text = c("white", "#a04c03", "#C0B9D0"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c("#D1BDCF", "#C9EAD8", "#D0ECFB"), col.text = c("#35789B", "#21623F", "#30082D"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c("#D1BDCF", "#C9EAD8", "#D0ECFB"), col.text = c("#30082D", "#21623F", "#35789B"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
design <- data.frame(set = rep(1:3, each=24),
rept = rep(rep(1:3, each=4),6),
parent= rep(rep(1:2, each=12),3),
F2 = c(rep(1:4,6), rep(5:8,6), rep(9:12,6)))
prog <- paste0("P", design$parent,".", design$F2)
rown <- rep(1:18, each=4)
col <- rep(rep(1:4, 6),3)
deli <- cbind(rown,col)
ord <- sample(1:24, 24, replace = FALSE)
ord.1 <- sample(25:48, 24, replace = FALSE)
ord.2 <- sample(49:72, 24, replace = FALSE)
deli.ord <- deli[c(ord,ord.1,ord.2),]
design <- cbind(design, deli.ord, prog)
library(desplot)
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c("#D1BDCF", "#C9EAD8", "#D0ECFB"), col.text = c("#30082D", "#21623F", "#35789B"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
desplot(as.factor(set) ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c("#D1BDCF", "#C9EAD8", "#D0ECFB"), col.text = c("#30082D", "#21623F", "#35789B"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
design$set <- as.factor(design$set)
desplot(set ~ col+rown, design,
col=rept, text= prog, cex=1, aspect=511/176,
out1=set, col.regions= c("#D1BDCF", "#C9EAD8", "#D0ECFB"), col.text = c("#30082D", "#21623F", "#35789B"),
out1.gpar=list(col = "gray50", lwd = 1, lty = 1), main = "",shorten = 'no')
library(AGHmatrix)
data.frame(ind=c("A", "B", "C", "D", "E",
"G", "H", "I", "J", "K",
"L", "M", "N", "O", "P",
"Q", "R", "S", "T", "U"),
P1 = c(0, 0, 0, 0, 0,
"A", "B", "C", "D", "A",
"G", "H", "I", "J", "K",
"L", "M", "N", "O", "L"
),
P2 = c(0, 0, 0, 0, 0,
"B", "C", "D", "E", "E",
"I", "J", "K", "G", "H",
"M", "N", "O", "P", "P"))
data.frame(ind=c("A", "B", "C", "D", "E",
"G", "H", "I", "J", "K",
"L", "M", "N", "O", "P",
"Q", "R", "S", "T", "U"),
P1 = c(0, 0, 0, 0, 0,
"A", "B", "C", "D", "A",
"G", "H", "I", "J", "K",
"L", "M", "N", "O", "L"
),
P2 = c(0, 0, 0, 0, 0,
"B", "C", "D", "E", "E",
"I", "J", "K", "G", "H",
"M", "N", "O", "P", "P"))
ped <- data.frame(ind=c("A", "B", "C", "D", "E",
"G", "H", "I", "J", "K",
"L", "M", "N", "O", "P",
"Q", "R", "S", "T", "U"),
P1 = c(0, 0, 0, 0, 0,
"A", "B", "C", "D", "A",
"G", "H", "I", "J", "K",
"L", "M", "N", "O", "L"
),
P2 = c(0, 0, 0, 0, 0,
"B", "C", "D", "E", "E",
"I", "J", "K", "G", "H",
"M", "N", "O", "P", "P"))
Amatrix(ped)
library(AGHmatrix)
Amatrix(ped)
test <- data.frame(ind= c("A", "B", "C", "D", "E", "F"),
par1 = c(0, 0, "A", "A", "A", "B"),
par2 = c(0, 0, "B", "B", "D", "E"))
Amatrix(test)
Amatrix(test)/2
3/8
3/16
5/16
Amatrix(ped)
Amatrix(ped)/2
Amatrix(ped)/2
ped <- data.frame(ind=c("A", "B", "C", "D", "E",
"G", "H", "I", "J", "K",
"L", "M", "N", "O", "P",
"Q", "R", "S", "T", "U"),
P1 = c(0, 0, 0, 0, 0,
"A", "B", "C", "D", "A",
"G", "H", "I", "J", "K",
"L", "M", "N", "O", "L"
),
P2 = c(0, 0, 0, 0, 0,
"B", "C", "D", "E", "E",
"I", "J", "K", "G", "H",
"M", "N", "O", "P", "P"))
ped
1 - 0.09375
0.90625^(-1/3)
0.90625^(1/3)
sqrt(2)
2^(1/2)
0.9^{1/5}
1-0.9677192
0.0322808*2
1/0.0645616
1-0.09375
0.90625^(1/3)
1 - 0.9677192
0.0322808*2
1/0.0645616
3^1
F1 = 1 - (1 - 0.16 - 1/20 + (1/20)*0.16)
F1
(F1 = 1 - (1-(1/20))*(1-0.16))
(0.1*10)/0.9
10/9
0.1*10
1/9
10/0.9
100/9
200/9
9*0.16
0.9^2
200-1.44
200-1.44 + 9
207.56/200
1.0378*0.81
(1/(2*(100/9)))*0.16
F1 = (1/(2*(100/9)) + (1 - (1/(2*(100/9)))*0.16))(1-0.1)^2
F1 = (1/(2*(100/9)) + (1 - (1/(2*(100/9)))*0.16))(1-0.1)^2
F1 = (1/(2*(100/9)) + (1 - (1/(2*(100/9)))*0.16))*(1-0.1)^2
F1
F1 = (1/(2*N) + (1 - 1/(2*N))*0.16)*(1-0.1)^2
N = 10/9
F1 = (1/(2*N) + (1 - 1/(2*N))*0.16)*(1-0.1)^2
F1
N = 10/0.9
F1 = (1/(2*N) + (1 - 1/(2*N))*0.16)*(1-0.1)^2
F1
0.202-0.16
0.160218 - 0.16
0.000218/0.42
0.42/0.000218
i <- 1
start <- Sys.time()
start
x <- files.list[[1]]
library(devtools)
?install_github
install_github("Cristianetaniguti/onemap_error", auth_token = "cb326937bf4a9945080187eca7b7201be219cb52")
install_github("Cristianetaniguti/onemap_error", auth_token = github_pat("cb326937bf4a9945080187eca7b7201be219cb52"))
install_github("Cristianetaniguti/onemap_error", auth_token = github_pat("c2e8272e8114585dba766467022b1831998e46f7"))
install_github("Cristianetaniguti/onemap_error", auth_token = "c2e8272e8114585dba766467022b1831998e46f7")
(50*10)/6
setwd("~/github/GENt-esalq.github.io")
setwd("~/github/GENt-esalq.github.io")
